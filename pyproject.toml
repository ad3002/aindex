[build-system]
requires = ["setuptools>=61.0", "wheel", "pybind11>=2.6.0"]
build-backend = "setuptools.build_meta"

[project]
name = "aindex2"
version = "1.4.0"
description = "Perfect hash based index for genome data."
authors = [{name = "Aleksey Komissarov", email = "ad3002@gmail.com"}]
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "intervaltree==3.1.0",
    "editdistance==0.8.1",
    "psutil>=5.8.0",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
]

[project.urls]
Homepage = "https://github.com/ad3002/aindex"

[project.scripts]
aindex = "aindex.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["aindex*"]

# ============================================================================
# cibuildwheel configuration - optimized for cross-platform builds
# ============================================================================

[tool.cibuildwheel]
# Build for Python 3.8+ on Linux and macOS only
build = "cp38-* cp39-* cp310-* cp311-* cp312-*"
skip = "*-musllinux* *-win*"  # Skip musl Linux and Windows distributions

# Test that wheels work - more robust test
test-command = [
    "python -c 'import sys; print(f\"Python {sys.version}\")'",
    "python -c 'import aindex; print(\"✓ aindex import successful\")'",
    "python -c 'from aindex import AIndex; print(\"✓ AIndex class available\")'",
]
test-skip = "cp38-macosx_*:arm64"  # Skip ARM64 tests for Python 3.8 due to cibuildwheel limitations

# ============================================================================
# Linux configuration
# ============================================================================

[tool.cibuildwheel.linux]
archs = ["x86_64", "aarch64"]

before-all = [
    "yum install -y make gcc-c++ || (apt-get update && apt-get install -y make build-essential)",
    "mkdir -p bin obj aindex/core aindex/bin",
]

before-build = [
    "pip install pybind11 numpy",
    "echo 'Building for Linux {wheel}'",
    "make clean || true",
    "mkdir -p bin obj aindex/core aindex/bin",
    "make all",
]

repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

[tool.cibuildwheel.linux.environment]
MAKEFLAGS = "-j1"

# ============================================================================
# macOS configuration  
# ============================================================================

[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64"]

# Команда before-build теперь очень проста
before-build = [
    "pip install pybind11 numpy",
    "echo '--- Building wheel for {arch} ---'",
    "echo 'ARCHFLAGS environment variable is: ${ARCHFLAGS:-not set}'", # Проверка переменной
    "make clean",
    "make all", # Просто вызываем make, он сам разберется
    # Проверяем архитектуру собранного файла для отладки
    "echo '--- Verifying architecture of built extension ---'",
    "lipo -info aindex/core/aindex_cpp*.so"
]

# Используем простую команду копирования
repair-wheel-command = "cp {wheel} {dest_dir}"

# КРИТИЧЕСКИ ВАЖНО: эта секция передает ARCHFLAGS в среду сборки
[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "11.0"
MAKEFLAGS = "-j1"
# cibuildwheel заменит {arch} на 'x86_64' или 'arm64'
ARCHFLAGS = "-arch {arch}"
# Note: Windows support is planned for future releases
# Currently supported platforms: Linux (x86_64, ARM64), macOS (x86_64, ARM64)