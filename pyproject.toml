[build-system]
requires = ["setuptools>=61.0", "wheel", "pybind11>=2.6.0"]
build-backend = "setuptools.build_meta"

[project]
name = "aindex2"
version = "1.4.0"
description = "Perfect hash based index for genome data."
authors = [{name = "Aleksey Komissarov", email = "ad3002@gmail.com"}]
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "intervaltree==3.1.0",
    "editdistance==0.8.1",
    "psutil>=5.8.0",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
]

[project.urls]
Homepage = "https://github.com/ad3002/aindex"

[project.scripts]
aindex = "aindex.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["aindex*"]

# ============================================================================
# cibuildwheel configuration - optimized for cross-platform builds
# ============================================================================

[tool.cibuildwheel]
# Build for Python 3.8+ on all platforms
build = "cp38-* cp39-* cp310-* cp311-* cp312-*"
skip = "*-musllinux*"  # Skip musl Linux distributions

# Test that wheels work
test-command = "python -c 'import aindex; print(\"âœ“ aindex import successful\")'"

# ============================================================================
# Linux configuration
# ============================================================================

[tool.cibuildwheel.linux]
archs = ["x86_64", "aarch64"]

before-all = [
    "yum install -y make gcc-c++ || (apt-get update && apt-get install -y make build-essential)",
    "mkdir -p bin obj aindex/core aindex/bin",
]

before-build = [
    "pip install pybind11 numpy",
    "echo 'Building for Linux {wheel}'",
    "make clean || true",
    "mkdir -p bin obj aindex/core aindex/bin",
    "make all",
]

repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

[tool.cibuildwheel.linux.environment]
MAKEFLAGS = "-j1"

# ============================================================================
# macOS configuration  
# ============================================================================

[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64"]

before-all = [
    "mkdir -p bin obj aindex/core aindex/bin",
]

before-build = [
    "pip install pybind11 numpy",
    "make clean || true",
    "mkdir -p bin obj aindex/core aindex/bin",
    "if echo '{wheel}' | grep -q 'arm64'; then echo 'Building ARM64 version' && make arm64; else echo 'Building x86_64 version' && make all; fi",
]

# Use simple copy instead of delocate for cross-arch compatibility
repair-wheel-command = "cp {wheel} {dest_dir}"

[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.15"
MAKEFLAGS = "-j1"

# ============================================================================
# Windows configuration
# ============================================================================

[tool.cibuildwheel.windows]
archs = ["AMD64"]

before-all = [
    "mkdir bin 2>nul || echo 'bin exists'",
    "mkdir obj 2>nul || echo 'obj exists'", 
    "mkdir aindex\\core 2>nul || echo 'aindex\\core exists'",
    "mkdir aindex\\bin 2>nul || echo 'aindex\\bin exists'",
    "copy scripts\\compute_aindex.py bin\\ || echo 'scripts copied'",
    "copy scripts\\compute_index.py bin\\ || echo 'scripts copied'",
    "copy scripts\\reads_to_fasta.py bin\\ || echo 'scripts copied'",
]

before-build = [
    "pip install pybind11 numpy",
    "echo Building for Windows {wheel}",
    # Use setup.py for Windows builds (simpler than make)
    "python setup.py build_ext --inplace",
]