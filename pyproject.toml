[build-system]
requires = ["setuptools>=61.0,<70.0", "wheel>=0.40.0,<0.44.0", "pybind11>=2.6.0", "cmake"]
build-backend = "setuptools.build_meta"

[project]
name = "aindex2"
version = "1.4.0"
description = "Perfect hash based index for genome data."
authors = [{name = "Aleksey Komissarov", email = "ad3002@gmail.com"}]
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "intervaltree==3.1.0",
    "editdistance==0.8.1",
    "psutil>=5.8.0",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
]

[project.urls]
Homepage = "https://github.com/ad3002/aindex"

[project.scripts]
aindex = "aindex.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["aindex*"]

[tool.cibuildwheel]
# Build for Python 3.8+ on all platforms  
build = "cp38-* cp39-* cp310-* cp311-* cp312-*"
skip = "*-musllinux*"  # Skip musl Linux for simplicity
test-command = "python -c 'import aindex; print(\"Import successful\"); ai = aindex.AIndex(); print(f\"AIndex created with {len([m for m in dir(ai) if not m.startswith(\\\"_\\\")])} methods\")'"

# Linux-specific configuration - using local emphf sources
[tool.cibuildwheel.linux]
archs = ["x86_64", "aarch64"]
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"
before-all = """
    yum install -y make gcc-c++ || apt-get update && apt-get install -y make build-essential
    echo "Setting up build environment for Linux..."
    mkdir -p bin obj aindex/core aindex/bin
    """

[tool.cibuildwheel.linux.environment]
CIBW_BEFORE_BUILD = """
    echo "Building for Linux architecture: $(uname -m)"
    make clean && make all
    """

# macOS-specific configuration - using local emphf sources  
[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64"]
repair-wheel-command = "cp {wheel} {dest_dir}"  # Skip delocate to avoid arch conflicts
before-all = """
    echo "Setting up build environment for macOS..."
    mkdir -p bin obj aindex/core aindex/bin
    """

[tool.cibuildwheel.macos.environment]  
MACOSX_DEPLOYMENT_TARGET = "10.15"
CIBW_BEFORE_BUILD = """
    echo "Building for macOS architecture: $(uname -m)"
    if [[ "$(uname -m)" == "arm64" ]]; then
      echo "Building with ARM64 optimizations..."
      make clean && make arm64
    else
      echo "Building standard version for x86_64..."
      make clean && make all
    fi
    """