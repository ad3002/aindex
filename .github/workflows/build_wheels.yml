name: Build and Publish

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel cibuildwheel

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2
        env:
          CIBW_BEFORE_ALL: |
            yum install -y cmake make gcc-c++
          CIBW_BEFORE_BUILD: |
            pip install cmake
          CIBW_REPAIR_WHEEL_COMMAND: >
            auditwheel repair -w {dest_dir} {wheel} &&
            mkdir -p {wheel}.tmp &&
            unzip -q {wheel} -d {wheel}.tmp &&
            for so_file in {wheel}.tmp/aindex/core/python_wrapper*.so; do
              if [ -f "$so_file" ] && [ "$(basename "$so_file")" != "python_wrapper.so" ]; then
                mv "$so_file" "{wheel}.tmp/aindex/core/python_wrapper.so"
              fi
            done &&
            (cd {wheel}.tmp && zip -q -r ../{wheel} *)
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Build sdist
        run: |
          pip install setuptools wheel
          python setup.py sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-wheels
          path: dist
          merge-multiple: true

      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}